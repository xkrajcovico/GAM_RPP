Help on supersh:

DESCRIPTION
    supersh is a shell app which can evaluate mathematical
    expresions, store data in variables, save values of variables
    into a file and more...


COMMANDS
    <empty command>
        Do nothing (show prompt).

    #exit
        Quit (this means do not show another fancy supersh prompt).

    #help
        Show this help (in standard output).
    
    #var <name> = <value> // can be shortened to $<name> = <value>
        Assign <value> to a variable <name>.
        <value> can be of type int, float or str.
        <value> can be also an expression - this will be evaluated first
        and its value assigned to a variable <name>.
        String value cannot contain ';' character (it is used during 
        saving variables into the file).
        Naming convention:
            <name> should start with an alphabet letter or underscore (_)
            and it should contain only A-Z, a-z, 0-9 and underscore (_).

    #list
        Show content of all variables.
        Variables are listed in following format: <name>;<value> 
        (each variable on a separate line).

    #save <filename>
        Save current values of variables to the file with name <filename>.
        These values can be restored even after killing app or rebooting
        computer.
        Values are saved in format <name>;<value> (each variable on 
        a separate line) - as in #list command.
        If no <filename> is provided, values are saved to file "vars.txt".
    
    #load <filename>
        Load variable values from file with name <filename>.
        If no <filename> is provided, values are loaded from file "vars.txt".
        NOTE: Current variables can be overwritten by those in loaded file.


EXPRESSIONS
    Numeric mathematical expresions (examples)
        4 * 3 -> 12
        (14 - 1) // 2 -> 6
        (12 % 10) / 3 -> 0.6666666666666666
    
    String operations (examples)
        "super" + "sh" -> "supersh"
        "super" + "sh" * 5 -> "supershshshshsh"
    
    Mathematical expresions with variables (examples)
        // assuming a == 4 and b == 2.5
        a * 3 -> 12
        (7 % a) // 2 -> 1
        3 * (b / 5) -> 1.5
